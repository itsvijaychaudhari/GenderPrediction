@model GenderPrediction.Models.PredictionModel
@{
	ViewBag.Title = "Home Page";
	Layout = null;//"~/Views/Shared/_Layout.cshtml";
}


<meta charset="UTF-8">
<link href="~/Content/Roboto.css" rel="stylesheet" />
@*<link href='https://fonts.googleapis.com/css?family=Roboto:400,700' rel='stylesheet' type='text/css'>*@
<link href="~/Content/font-awsome.min.css" rel="stylesheet" />
@*<link rel='stylesheet prefetch' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'>*@
<link href="~/Content/Textbox.css" rel="stylesheet" />
<link href="~/Content/RadioButton.css" rel="stylesheet" />



@using (Html.BeginForm())
{
	@Html.ValidationSummary(true)

	<div>
		@Html.HiddenFor(model => model.Suggestedgender, Model.Suggestedgender)
	</div>
	<div class="middle">

		<br />
		@Html.RadioButton("Gender", "Male")
		<div class="front-end box" style="right: 18px" id="front-end">
			<label>
				<span style="left: -40px">Male</span>
			</label>
		</div>

		@Html.RadioButton("Gender", "Female")
		<div class="back-end box" style="right: 9px" id="back-end">
			<label>
				<span style="left: -55px">Female</span>
			</label>
		</div>

		@Html.RadioButton("Gender", "Both")
		<div class="Both box" id="box">
			<label>
				<span style="left: -40px">Both</span>
			</label>
		</div>
	</div>

	@*<div class="row">
			<div class="centered">
				<div class="group" style="margin-top:100px">
					@Html.TextBoxFor(m => m.Name, new { @class = "form-control", id = "Textbox", required = "required", @onfocus = "this.value=''" })
					<label id="name" for="name">Name</label>
					<div class="bar"></div>
				</div>
			</div>
		</div>*@

	<div class="row">
		<div class="centered">
			<div class="group">
				@Html.TextBoxFor(m => m.Name, new { @class = "form-control", id = "Textbox" })
				<label id="name" for="name">Name</label>
				<div class="bar"></div>
				<div>
					@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
				</div>


			</div>
		</div>
	</div>
}






<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@Scripts.Render("~/bundles/jqueryval")


<script type="text/javascript">
	$("#front-end").click(function() {
		$('input:radio[name="Gender"]').filter('[value="Male"]').prop('checked', true);
		var person = {};
		person.Name = $("#Textbox").val();
		person.Currectedgender = "Male";
		person.Suggestedgender = $("#Suggestedgender").val();
		if (person.Name !== "") {
			$.ajax({
				type: "POST",
				url: "@Url.Action("SaveCorrectedAns", "Home")",
				data: '{gender:' + JSON.stringify(person) + '}',
				contentType: "application/json; charset=utf-8",
				success: function () {

				},
				failure: function(response) {

					alert(JSON.stringify(response));

				},
				error: function(response) {

					alert(JSON.stringify(response));
				}
			});
		}

	});

	$("#back-end").click(function () {
		$('input:radio[name="Gender"]').filter('[value="Female"]').prop('checked', true);
		var person = {};
		person.Name = $("#Textbox").val();
		person.Currectedgender = "Female";
		person.Suggestedgender = $("#Suggestedgender").val();
		if (person.Name !== "") {
			$.ajax({
				type: "POST",
				url: "@Url.Action("SaveCorrectedAns", "Home")",
				data: '{gender:' + JSON.stringify(person) + '}',
				contentType: "application/json; charset=utf-8",
				success: function () {

				},
				failure: function(response) {

					alert(JSON.stringify(response));

				},
				error: function(response) {

					alert(JSON.stringify(response));
				}
			});
		}
	});

	$("#box").click(function () {

		$('input:radio[name="Gender"]').filter('[value="Both"]').prop('checked', true);
		var person = {};
		person.Name = $("#Textbox").val();
		person.Currectedgender = "Both";
		person.Suggestedgender = $("#Suggestedgender").val();
		if (person.Name !== "") {
			$.ajax({
				type: "POST",
				url: "@Url.Action("SaveCorrectedAns", "Home")",
				data: '{gender:' + JSON.stringify(person) + '}',
				contentType: "application/json; charset=utf-8",
				success: function () {

				},
				failure: function(response) {

					alert(JSON.stringify(response));

				},
				error: function(response) {

					alert(JSON.stringify(response));
				}
			});
		}
	});

	//jquery function to clear all value on Textbox fous
	$(function () {
		$("#Textbox").on("focus", function () {
			$("input[name=Gender]:radio").prop('checked', false);
		});

	});

	//jquery function to take correct predict feedback from user
	$(function () {
		$("input[name=Gender]:radio").change(function () {
			var person = {};
			person.Name = $("#Textbox").val();
			person.Currectedgender = $(this).val();
			person.Suggestedgender = $("#Suggestedgender").val();
			$.ajax({
				type: "POST",
				url: "@Url.Action("SaveCorrectedAns", "Home")",
				data: '{gender:' + JSON.stringify(person) + '}',
				contentType: "application/json; charset=utf-8",
				success: function () {

				},
				failure: function(response) {

					alert(JSON.stringify(response));

				},
				error: function(response) {

					alert(JSON.stringify(response));
				}
			});
		});
	});

	//Jquery function to predict result on focus change from textbox
	$(function () {
		$("#Textbox").blur(function() {
			var person = {};
			person.Name = $('#Textbox').val();
			$.ajax({
				type: "GET",
				url: "@Url.Action("Predict", "Home")?gender=" + person.Name,
				success: function(res) {
					if (res.Suggestedgender === "Male") {
						$('input:radio[name="Gender"]').filter('[value="Male"]').prop('checked', true);
						$("#Suggestedgender").val(res.Suggestedgender);
					} else if (res.Suggestedgender === "Female") {
						$('input:radio[name="Gender"]').filter('[value="Female"]').prop('checked', true);
						$("#Suggestedgender").val(res.Suggestedgender);
					} else {
						if (person.Name !== "")
							$('input:radio[name="Gender"]').filter('[value="Both"]').prop('checked', true);
						$("#Suggestedgender").val(res.Suggestedgender);
					}
				},
				failure: function() {
					alert("Fail to Predict..!");
				},
				error: function() {
					alert("Some Error Occured..!");
				}

			});
		});
	});

	$(function () {
		$('#Textbox').keyup(function (e) {
			var key = e.which;
			if (key === 8) {
				$("input[name=Gender]:radio").prop('checked', false);
			}

			if (key === 13) // the enter key code
			{
				var person = {};
				person.Name = $('#Textbox').val();
				$.ajax({
					type: "GET",
					url: "@Url.Action("Predict", "Home")?gender=" + person.Name,
					success: function(res) {
						if (res.Suggestedgender === "Male") {
							$('input:radio[name="Gender"]').filter('[value="Male"]').prop('checked', true);
							$("#Suggestedgender").val(res.Suggestedgender);
						} else if (res.Suggestedgender === "Female") {
							$('input:radio[name="Gender"]').filter('[value="Female"]').prop('checked', true);
							$("#Suggestedgender").val(res.Suggestedgender);
						} else {
							if (person.Name !== "")
								$('input:radio[name="Gender"]').filter('[value="Both"]').prop('checked', true);
							$("#Suggestedgender").val(res.Suggestedgender);
						}
					},
					failure: function() {
						alert("Fail to Predict..!");
					},
					error: function() {
						alert("Some Error Occured..!");
					}

				});
			}


		});
	});


</script>



